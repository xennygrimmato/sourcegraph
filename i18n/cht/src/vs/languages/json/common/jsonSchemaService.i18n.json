/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"app.plugin.json.activationEvents": "外掛程式的啟用事件",
	"app.plugin.json.contributes": "這項外掛程式的比重",
	"app.plugin.json.contributes.language": "外掛程式的語言比重",
	"app.plugin.json.contributes.language.aliases": "這個語言的別名名稱",
	"app.plugin.json.contributes.language.extensions": "與這個語言相關聯的副檔名",
	"app.plugin.json.contributes.language.filenames": "與這個語言相關聯的檔名",
	"app.plugin.json.contributes.language.id": "這個語言的 ID",
	"app.plugin.json.dependencies": "外掛程式相依性",
	"app.plugin.json.mainModule": "主要 JavaScript 檔案的相對路徑",
	"app.plugin.json.pluginId": "不重複的外掛程式 ID",
	"app.plugin.json.scripts": "外掛程式提供的指令碼",
	"app.plugin.json.scripts.compile": "要編譯此外掛程式的命令列",
	"bower.json.authors": "撰寫封裝之內容的人員清單。",
	"bower.json.dependencies": "相依性的指定，採用封裝名稱的簡易雜湊到 semver 相容的識別碼或 URL。",
	"bower.json.description": "利用簡短的描述協助使用者識別及搜尋您的封裝。",
	"bower.json.devDependencies": "唯有開發封裝時才需要的相依性，如測試架構或建置文件。",
	"bower.json.exportsOverride": "grunt-bower-task 用來指定自訂安裝位置。",
	"bower.json.homepage": "用來深入瞭解封裝的 URL。如果您未指定 URL 且是 GitHub 端點，將回復為 GitHub 專案。",
	"bower.json.ignore": "在安裝封裝時要忽略的 Bower 檔案清單。",
	"bower.json.invalidPatternName": "所有開頭為 _ 的屬性均適用。",
	"bower.json.keywords": "用於關鍵字搜尋。有助於讓使用者不需要知道封裝名稱即可輕易地探索到封裝。",
	"bower.json.license": "SPDX 授權識別碼，或授權的路徑/URL。",
	"bower.json.main": "使用封裝所需的主要作用檔案。",
	"bower.json.moduleType": "此封裝公開的模組類型",
	"bower.json.packagename": "封裝的名稱。",
	"bower.json.private": "如果設定為 true，它將會拒絕發行。這是避免意外發行私人儲存機制的方法。",
	"bower.json.repository": "原始程式碼所在的儲存機制。",
	"bower.json.resolutions": "封裝之間發生衝突時，用來自動解決衝突的相依性版本。",
	"bower.json.title": "Bower 組態檔的 JSON 結構描述",
	"bower.json.version": "語意式版本號碼。",
	"global.json.projects": "與這個檔案相關的專案資料夾清單。",
	"global.json.sources": "與這個檔案相關的來源資料夾清單。",
	"global.json.title": "ASP.NET 全域組態檔的 JSON 結構描述",
	"jsconfig.json.compilerOptions": "指示 JavaScript 語言服務如何驗證 .js 檔案",
	"jsconfig.json.compilerOptions.charset": "輸入檔的字元集",
	"jsconfig.json.compilerOptions.decorators": "啟用 ES7 裝飾項目的實驗支援。",
	"jsconfig.json.compilerOptions.diagnostics": "顯示診斷資訊。",
	"jsconfig.json.compilerOptions.locale": "用來顯示錯誤訊息的地區設定，例如 zh-TW。",
	"jsconfig.json.compilerOptions.mapRoot": "指定偵錯工具應尋找對應檔的位置，而不尋找產生的位置。",
	"jsconfig.json.compilerOptions.module": "要解析的模組程式碼產生: 'commonjs'、'amd'、'system' 或 'umd'。",
	"jsconfig.json.compilerOptions.noLib": "不要包含預設程式庫檔 (lib.d.ts)。",
	"jsconfig.json.compilerOptions.target": "指定 ECMAScript 目標版本: 'ES3' (預設值)、'ES5' 或 'ES6' (實驗)。",
	"jsconfig.json.exclude": "列出不應納入的檔案與資料夾。存在 'files' 屬性時，不允許此屬性。",
	"jsconfig.json.files": "如果 jsconfig.json 中沒有出現 'files' 屬性，語言服務預設會包含所有內含目錄與子目錄的檔案。指定 'files' 屬性時，只會包含那些檔案。",
	"jsconfig.json.title": "JavaScript 組態檔的 JSON 結構描述",
	"json.schema.unabletoload": "無法從 '{0}': {1} 載入結構描述。",
	"package.json.bugs": "專案問題追蹤器的 URL 及 (或) 接收回報問題的電子郵件地址。對於您的封裝出現問題的人員而言，這些內容很實用。",
	"package.json.bugs.email": "接收回報問題的電子郵件地址。",
	"package.json.bugs.url": "專案問題追踨器的 URL。",
	"package.json.bundleDependencies": "發行封裝時會一併附上的封裝名稱陣列。",
	"package.json.bundledDependencies": "發行封裝時會一併附上的封裝名稱陣列。",
	"package.json.config": "'config' 雜湊可用以設定各種升級之間皆存在的封裝指令碼中，所用的組態參數。",
	"package.json.contributors": "參與這個封裝的人員清單。",
	"package.json.dependency": "相依性會利用封裝名稱的簡式雜湊，指定範圍的版本。版本範圍為一個字串，其有一或多個以空格分隔的描述元。相依性也可利用 Tarball 或 Git URL 加以識別。",
	"package.json.descr": "其有助於探索您封裝的人員，因為其列於 'npm search' 中。",
	"package.json.description": "這個封裝的 NPM 組態。",
	"package.json.directories.bin": "若指定了 'bin' 目錄，則所有位於該資料夾中的所有檔案，都會用為 'bin' 雜湊。",
	"package.json.directories.doc": "將 Markdown 檔案置於此處。最後有可能有天能以不錯的方式顯示。",
	"package.json.directories.example": "將指令碼範例置於此處。有可能某天能用更聰明的方式公開。",
	"package.json.directories.lib": "告知人員大部分程式庫的所在位置。程式庫資料夾其實沒進行什麼特別的動作，但其為實用的中繼資訊。",
	"package.json.directories.man": "擁有許多手冊頁 (man page) 的資料夾。瀏覽資料夾可產生 'man' 陣列。",
	"package.json.files": "'files' 欄位為一檔案陣列，內含於您的專案中。如果已命名陣列中的資料夾，則其也會包含該資料夾內的檔案。",
	"package.json.homepage": "進入專案首頁的 URL。",
	"package.json.keywords": "其有助於探索您封裝的人員，因為其列於 'npm search' 中。",
	"package.json.license": "您應該為您的封裝指定授權，人員才能了解允許他們使用的方式為何，以及您設有什麼限制。",
	"package.json.licenses": "您應該為您的封裝指定授權，人員才能了解允許他們使用的方式為何，以及您設有什麼限制。",
	"package.json.main": "此主要欄位是模組 ID，而該模組 ID 為進入您程式的主要進入點。",
	"package.json.maintainers": "維護這個封裝的人員清單。",
	"package.json.man": "指定單一檔案或檔名陣列，以供說明文件程式進行尋找。",
	"package.json.name": "封裝的名稱。",
	"package.json.person": "參與建立或維護這個封裝的人員",
	"package.json.preferGlobal": "如果您的封裝主要為命令列應用程式，而應進行全域安裝，則請將此值設定為 True 以在它進行本機安裝時發出警告。",
	"package.json.private": "若設定為 True，npm 將會拒絶發行這個封裝。",
	"package.json.repository": "指定程式碼所在的位置。其對於希望參與的人員來說很實用。",
	"package.json.scripts": "'scripts' 成員是指令碼命令的物件雜湊，其在封裝的生命週期內會執行多次。機碼為生命週期事件，而值則為當時要執行的命令。",
	"package.json.underscore": "所有開頭為 _ 的屬性均適用。",
	"package.json.version": "版本必須可以由節點 semver 剖析，其與 npm 組合在一起為相依性。",
	"project.json.authors": "應用程式作者",
	"project.json.bundleExclude": "排除在發行輸出之外的檔案清單 (kpm 套件組合)。",
	"project.json.code": "用來指定所有需要編譯之程式碼檔案的 Glob 模式 (資料類型: 採用 Glob 模式的字串或陣列)。例如: [ 'Folder1*.cs', 'Folder2*.cs' ]",
	"project.json.commands": "此應用程式可以使用的命令",
	"project.json.compilationOptions": "傳遞到 Roslyn 的編譯選項",
	"project.json.configurations": "組態為內含編譯設定的已命名群組。執行階段中內建有 2 個預設值: 'Debug' 及 'Release'。",
	"project.json.dependencies": "應用程式的相依性。每個項目都會指定 Nuget 套件的名稱及版本。",
	"project.json.dependency.name": "相依性的版本。",
	"project.json.dependency.type": "相依性的類型。只有在建置時才會有 'build' 相依性",
	"project.json.description": "應用程式的描述",
	"project.json.exclude": "用來指定要排除在編譯之外的所有程式碼檔案的 Glob 模式 (資料類型: 採用 Glob 模式的字串或陣列)。",
	"project.json.frameworks": "要建置的目標架構，以及組態特有的相依性。",
	"project.json.preprocess": "用來指定要前處理之所有程式碼檔案的 Glob 模式 (資料類型: 採用 Glob 模式的字串)。",
	"project.json.resources": "用來指定需要以資源形式編譯之所有檔案的 Glob 模式。",
	"project.json.script": "一或多個命令列指令碼。\r\r可用變數:\r%project:Directory% - 專案目錄\r%project:Name% - 專案名稱\r%project:Version% - 專案版本",
	"project.json.scripts": "要在各個階段中執行的指令碼。",
	"project.json.shared": "用來指定與相依專案共用之程式碼檔案的 Glob 模式。範例 : [ 'Folder1*.cs', 'Folder2*.cs' ]",
	"project.json.title": "ASP.NET project.json 檔案的 JSON 結構描述",
	"project.json.version": "應用程式的版本。範例: 1.2.0.0",
	"project.json.webroot": "在 project.json 檔案中指定 webroot 屬性可指定 Web 伺服器根目錄 (亦稱為公用資料夾)。在 Visual Studio 中，此資料夾將用來當做 IIS 的根目錄。您應將靜態檔案放置於此處。",
	"schema.json": "使用結構描述描述 JSON 檔案。如需詳細資訊，請參閱 json-schema.org。",
	"schema.json.$schema": "用來驗證此文件的結構描述 ",
	"schema.json.additionalItems": "用於陣列 (只有在項目設為陣列時)。如果它是結構描述，這個結構描述會驗證項目陣列所指定的項目之後的項目。如果它是 false，則額外的項目會導致驗證失敗。",
	"schema.json.additionalProperties": "結構描述或布林值。若為結構描述，將會用於驗證所有不符合 'properties' 或 'patternProperties' 的屬性。若為 false，所有不符合這兩項中任何一項的屬性，都會導致此結構描述失敗。",
	"schema.json.allOf": "結構描述的陣列，必須全部符合。",
	"schema.json.anyOf": "結構描述的陣列，其中至少一個必須符合。",
	"schema.json.default": "預設值。供建議使用。",
	"schema.json.definitions": "不用於驗證。將您要利用 $ref 內嵌參考的子結構描述置於此",
	"schema.json.dependencies": "屬性名稱對屬性名稱陣列或結構描述的對應。屬性名稱陣列表示索引鍵中的命名屬性若要有效，陣列中的屬性必須出現在物件中。如果值是結構描述，則只有在索引鍵中的屬性存在物件上時才會將結構描述套用到該物件。",
	"schema.json.description": "元素的詳細描述。用於暫留功能表和建議。",
	"schema.json.enum": "有效常值的集合",
	"schema.json.exclusiveMaximum": "將最大值屬性設為排除。",
	"schema.json.exclusiveMininum": "將最小值屬性設為排除。",
	"schema.json.id": "結構描述的唯一識別項。",
	"schema.json.items": "用於陣列。可以是用來比對驗證每個元素的結構描述，或是用來依序比對驗證每個項目的結構描述陣列 (第一個結構描述驗證第一個元素，第二個結構描述驗證第二個元素，依此類推)。",
	"schema.json.maxItems": "可包含在陣列中的最大項目數目。包含。",
	"schema.json.maxLength": "字串的最大長度。",
	"schema.json.maxProperties": "物件可以有的最大屬性數目。包含。",
	"schema.json.maximum": "最大數值，預設為包含。",
	"schema.json.minItems": "可包含在陣列中的最小項目數目。包含。",
	"schema.json.minLength": "字串的最小長度。",
	"schema.json.minProperties": "物件可以有的最小屬性數目。包含。",
	"schema.json.minimum": "最小數值，預設為包含。",
	"schema.json.multipleOf": "應該會整除目前值的數字 (即沒有餘數)",
	"schema.json.not": "不能相符的結構描述。",
	"schema.json.oneOf": "結構描述的陣列，其中剛好一個必須符合。",
	"schema.json.pattern": "用來比對字串的規則運算式。它未隱含錨定。",
	"schema.json.patternProperties": "屬性名稱的規則運算式對結構描述的對應，用於比對屬性。",
	"schema.json.properties": "每個屬性的屬性名稱對結構描述對應。",
	"schema.json.required": "這個字串陣列會列出這個物件需要之所有屬性的名稱。",
	"schema.json.title": "元素的描述性標題。",
	"schema.json.type": "可以是其中一個基本結構描述類型 (數字、整數、null、陣列、物件、布林值、字串) 的字串，或是指定這些類型子集的字串陣列。",
	"schema.json.uniqueItems": "是否陣列中的所有項目都必須是唯一的。預設為 false。",
	"snippetSchema.json": "使用者程式碼片段組態",
	"snippetSchema.json.body": "程式碼片段內容。請為變數使用 '${id}'、'${id:label}'、'${1:label}'，而為游標位置使用 '$0'、'$1'",
	"snippetSchema.json.description": "程式碼片段描述。",
	"snippetSchema.json.prefix": "在 Intellisense 中選取程式碼片段時要使用的前置詞",
	"tsconfig.json.compilerOptions": "指示 TypeScript 編譯器如何編譯 .ts 檔案",
	"tsconfig.json.compilerOptions.charset": "輸入檔的字元集",
	"tsconfig.json.compilerOptions.declaration": "產生相對應的 d.ts 檔案。",
	"tsconfig.json.compilerOptions.diagnostics": "顯示診斷資訊。",
	"tsconfig.json.compilerOptions.emitBOM": "在輸出檔的開頭發出 UTF-8 位元組順序標記 (BOM)。",
	"tsconfig.json.compilerOptions.inlineSourceMap": "使用來源對應發出單一檔案，而不使用另外的檔案。",
	"tsconfig.json.compilerOptions.inlineSources": "在單一檔案中連同 sourcemap 發出來源; 需要設定 --inlineSourceMap。",
	"tsconfig.json.compilerOptions.listFiles": "列印編譯部份檔案的名稱。",
	"tsconfig.json.compilerOptions.locale": "用來顯示錯誤訊息的地區設定，例如 zh-TW。",
	"tsconfig.json.compilerOptions.mapRoot": "指定偵錯工具應尋找對應檔的位置，而不尋找產生的位置。",
	"tsconfig.json.compilerOptions.module": "指定模組程式碼產生: 'CommonJS'、'Amd'、'System' 或 'UMD'。",
	"tsconfig.json.compilerOptions.newLine": "指定發出檔案時要使用的行尾順序: 'CRLF' (dos) 或 'LF' (unix)。)",
	"tsconfig.json.compilerOptions.noEmit": "不發出輸出。",
	"tsconfig.json.compilerOptions.noEmitHelpers": "不要在編譯過的輸出中產生自訂 Helper 函式，像是 __extends。",
	"tsconfig.json.compilerOptions.noEmitOnError": "如果回報了任何類型的檢查錯誤，就不發出輸出。",
	"tsconfig.json.compilerOptions.noImplicitAny": "針對具隱含之 'any' 類型的運算式與宣告發出警告。",
	"tsconfig.json.compilerOptions.noLib": "不要包含預設程式庫檔 (lib.d.ts)。",
	"tsconfig.json.compilerOptions.out": "串連並發出輸出至單一檔案。",
	"tsconfig.json.compilerOptions.outDir": "將輸出結構重新導向至目錄。",
	"tsconfig.json.compilerOptions.preserveConstEnums": "不清除產生之程式碼中的 const 列舉宣告。",
	"tsconfig.json.compilerOptions.removeComments": "不將註解發出到輸出。",
	"tsconfig.json.compilerOptions.rootDir": "指定輸入檔的根目錄。可用以控制具有 --outDir 的輸出目錄結構。",
	"tsconfig.json.compilerOptions.sourceMap": "產生相對應的 '.map' 檔案。",
	"tsconfig.json.compilerOptions.sourceRoot": "指定偵錯工具尋找 TypeScript 檔案的位置，而不尋找原始檔位置。",
	"tsconfig.json.compilerOptions.suppressImplicitAnyIndexErrors": "對缺少索引簽章的索引物件隱藏 noImplicitAny 錯誤。",
	"tsconfig.json.compilerOptions.target": "指定 ECMAScript 目標版本: 'ES3' (預設值)、'ES5' 或 'ES6' (實驗)。",
	"tsconfig.json.files": "如果在 tsconfig.json 中沒有出現 'files' 屬性，編譯器預設會包含所有內含目錄與子目錄的檔案。指定 'files' 屬性時，只會包含那些檔案。",
	"tsconfig.json.title": "TypeScript 編譯器組態檔的 JSON 結構描述"
}