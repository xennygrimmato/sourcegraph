@value base "sourcegraph/components/styles/_base.css";
@value colors "sourcegraph/components/styles/_colors.css";
@value typography "sourcegraph/components/styles/_typography.css";
@value animation "sourcegraph/components/styles/animation.css";
@value GlobalNav "sourcegraph/app/styles/GlobalNav.css";

/* TODO (chexee): move some of these to vars or individual components */
@value marginBoxBorderWidth 4px;
@value c_blue from colors;
@value contentWidth 690px;
@value marginWidth 290px;
@value codeLineHeight 16px;
@value firstCodeLineTopPadding 8px;

.pathComponent {}
.inactivePathComponent {
	composes: pathComponent;
}
.activePathComponent {
	composes: pathComponent;
	composes: b from base;
}

/* Layout */

.container {
	display: flex;
	align-items: start;
}
.content {
	flex: 1.5 0 contentWidth;
	max-width: calc(contentWidth * 1.4);
	overflow: hidden;
}
.margin {
	flex: 1 0 marginWidth;
}
@media (max-width: calc(contentWidth + 10px)) {
	.content {
		max-width: 100%;
	}
}

.marginBox {
	composes: pt1 pb2 ph2 from base;
}
.marginBoxRight {
	composes: marginBox;
	border-left: solid marginBoxBorderWidth c_blue;
	margin-left: calc(-1 * marginBoxBorderWidth);
}
.marginBoxLeft {
	composes: marginBox;
	border-right: solid marginBoxBorderWidth c_blue;
}

/* Blob content */
.blobAndToolbar {
	composes: content;
	composes: br from base;
	composes: b--light-gray from colors;
}
.toolbar {
	/* TODO(sqs!): not really used right now (only has the build indicator) */
}
.scroller {
	padding-top: 35px;
	overflow-x: auto;
	overflow-y: hidden;
}
/* Make these classes global because we need to be able to generate
   identical markup in Go (where we can't as easily obtain the class mapping). */
.lines {
	composes: code from typography;
	font-size: 1.05rem;
	table-layout: fixed;
	border-spacing: 0;
}
.lineNumberCell {
	padding: 0;
	width: 1%;
	min-width: 40px;
	background-color: #fafafc;
}

.lineCell {
	line-height: codeLineHeight;
	composes: pv0 from base;
}
.line {}
.lineNumber {
	composes: lineCell;
	display: block;
	text-align: right;
	white-space: nowrap;
	composes: light-silver from colors;
	padding-right: 8px;
	user-select: none;
	cursor: pointer;
}
.lineNumber:before {
	content: attr(data-line);
	line-height: codeLineHeight;
}
.selectedLineNumber {
	composes: lineNumber;
	@value c_blue-2 from colors;
	background-color: c_blue-2;
	@value c_gray from colors;
	color: c_gray;
}
.line:first-child .lineNumber, .line:first-child .lineContent {
	padding-top: firstCodeLineTopPadding;
}
.lineContent {
	composes: lineCell;
	composes: ph3 from base;
	tab-size: 4;
	overflow: visible;
	white-space: pre;
}
.selectedLineContent {
	composes: lineContent;
	composes: bg-blue-1 from colors;
}
.highlightedAnn {
	color: black;
	outline: solid 1px #fff6ad;
	background-color: #fff9b8;
	cursor: pointer;
}
.disabledAnn {
	@value c_light-gray from colors;
	outline: solid 1px c_light-gray;
	background-color: c_light-gray;
	transition: background-color 0.2;
	cursor: default;
}
.activeAnn {
	color: black;
	outline: solid 1px #ffe68d;
	background-color: #ffe998;
}
.line-expander {
	composes: faded-blue from colors;
	background-color: rgba(64,120,192,.06);
	line-height: 0.7;
	text-align: center;
}
.line-expander-cell {
	composes: line-expander;
	cursor: pointer;
}
.line-expander-cell:hover {
	color: white;
	background-color: rgba(64,120,192,.9);
}
.line-expander-icon {
	composes: pb2 from base;
	text-align: center;
}

.placeholderWhitespace {
	float: right;
	background-color: white;
	height: codeLineHeight;
}
.lineContentPlaceholder {
	composes: pa0 from base;
}
.linesContentPlaceholder {
	composes: lines;
	composes: ph0 from base;
	composes: shimmer-animation from animation;
	background: #f6f7f8;
	background: linear-gradient(to right, #f2f2f2 8%, #e9e9e9 18%, #f2f2f2 53%);
}
