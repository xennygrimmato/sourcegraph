/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"app.plugin.json.activationEvents": "Eventi di attivazione per il plug-in",
	"app.plugin.json.contributes": "Contributi di questo plug-in",
	"app.plugin.json.contributes.language": "Contributi del plug-in relativi al linguaggio",
	"app.plugin.json.contributes.language.aliases": "Alias di nome di questo linguaggio",
	"app.plugin.json.contributes.language.extensions": "Estensioni di file associate a questo linguaggio",
	"app.plugin.json.contributes.language.filenames": "Nomi file associati a questo linguaggio",
	"app.plugin.json.contributes.language.id": "ID di questo linguaggio",
	"app.plugin.json.dependencies": "Dipendenze dei plug-in",
	"app.plugin.json.mainModule": "Percorso relativo del file JavaScript principale",
	"app.plugin.json.pluginId": "ID univoco del plug-in",
	"app.plugin.json.scripts": "Script offerti dal plug-in",
	"app.plugin.json.scripts.compile": "Riga di comando per la compilazione di questo plug-in",
	"bower.json.authors": "Elenco degli utenti che hanno modificato il contenuto del pacchetto.",
	"bower.json.dependencies": "Per specificare le dipendenze, viene eseguito un semplice hash del nome del pacchetto in un identificatore o URL compatibile con semver.",
	"bower.json.description": "Per facilitare l'identificazione e la ricerca del pacchetto, aggiungere una breve descrizione.",
	"bower.json.devDependencies": "Le sole dipendenze necessarie per lo sviluppo del pacchetto, ad esempio framework di test o documentazione sulla compilazione.",
	"bower.json.exportsOverride": "Usato da grunt-bower-task per specificare percorsi di installazione personalizzati.",
	"bower.json.homepage": "URL per visualizzare altre informazioni sul pacchetto. Se non viene specificato ed è un endpoint GitHub, passa al progetto GitHub.",
	"bower.json.ignore": "Elenco di file che Bower deve ignorare durante l'installazione del pacchetto.",
	"bower.json.invalidPatternName": "Qualsiasi proprietà che inizia con _ è valida.",
	"bower.json.keywords": "Usato per ricerche per parola chiave. Consente agli utenti di individuare il pacchetto più facilmente anche senza conoscerne il nome.",
	"bower.json.license": "Identificatore di licenza SPDX o percorso/URL di una licenza.",
	"bower.json.main": "File attivi principali necessari per usare il pacchetto.",
	"bower.json.moduleType": "Tipi di moduli esposti da questo pacchetto",
	"bower.json.packagename": "Nome del pacchetto.",
	"bower.json.private": "Se viene impostato su true, non verrà pubblicato. Si tratta di un modo per evitare la pubblicazione accidentale di repository privati.",
	"bower.json.repository": "Repository in cui si trova il codice sorgente.",
	"bower.json.resolutions": "Versioni delle dipendenze da usare per la risoluzione automatica in caso di conflitti tra pacchetti.",
	"bower.json.title": "Schema JSON per i file di configurazione di Bower",
	"bower.json.version": "Numero di versione semantico.",
	"global.json.projects": "Elenco di cartelle di progetto relative a questo file.",
	"global.json.sources": "Elenco di cartelle di origine relative a questo file.",
	"global.json.title": "Schema JSON per i file di configurazione globali di ASP.NET",
	"jsconfig.json.compilerOptions": "Indica al servizio di linguaggio JavaScript come compilare i file con estensione js",
	"jsconfig.json.compilerOptions.charset": "Set di caratteri dei file di input",
	"jsconfig.json.compilerOptions.decorators": "Abilita il supporto sperimentale per gli elementi Decorator di ES7.",
	"jsconfig.json.compilerOptions.diagnostics": "Mostra le informazioni diagnostiche.",
	"jsconfig.json.compilerOptions.locale": "Impostazioni locali da usare per la visualizzazione dei messaggi di errore, ad esempio it-it.",
	"jsconfig.json.compilerOptions.mapRoot": "Consente di specificare il percorso in cui il debugger deve trovare i file map invece dei percorsi generati",
	"jsconfig.json.compilerOptions.module": "Generazione codice del modulo da usare per la risoluzione: 'commonjs', 'amd', 'system' o 'umd'.",
	"jsconfig.json.compilerOptions.noLib": "Non include il file di libreria predefinito (lib.d.ts).",
	"jsconfig.json.compilerOptions.target": "Consente di specificare la versione di destinazione di ECMAScript: 'ES3' (predefinita), 'ES5' o 'ES6' (sperimentale).",
	"jsconfig.json.exclude": "Elenca file e cartelle da non includere. Questa proprietà non viene rispettata quando è presente la proprietà 'files'.",
	"jsconfig.json.files": "Se in un file jsconfig.json non è presente alcuna proprietà 'files', per impostazione predefinita il servizio di linguaggio include tutti i file contenuti nella directory e nelle sottodirectory. Se la proprietà 'files' è specificata, vengono inclusi solo tali file.",
	"jsconfig.json.title": "Schema JSON per il file di configurazione JavaScript",
	"json.schema.unabletoload": "Non è possibile caricare lo schema da '{0}': {1}.",
	"package.json.bugs": "URL dello strumento di gestione dei problemi del progetto e/o indirizzo di posta elettronica a cui devono essere segnalati i problemi. Queste informazioni sono utili per gli utenti che riscontrano problemi con il pacchetto.",
	"package.json.bugs.email": "Indirizzo di posta elettronica a cui devono essere segnalati i problemi.",
	"package.json.bugs.url": "URL dello strumento di gestione dei problemi del progetto.",
	"package.json.bundleDependencies": "Matrice dei nomi di pacchetto che verranno inclusi durante la pubblicazione del pacchetto.",
	"package.json.bundledDependencies": "Matrice dei nomi di pacchetto che verranno inclusi durante la pubblicazione del pacchetto.",
	"package.json.config": "È possibile usare un hash 'config' per impostare i parametri di configurazione usati negli script del pacchetto che persistono tra un aggiornamento e l'altro.",
	"package.json.contributors": "Elenco degli utenti che hanno collaborato a questo pacchetto.",
	"package.json.dependency": "Le dipendenze vengono specificate con un semplice hash del nome del pacchetto all'intervallo delle versioni. Quest'ultimo è una stringa contenente uno o più descrittori delimitati da spazi. Le dipendenze possono anche essere identificate da un URL tarball o git.",
	"package.json.descr": "Questo facilita l'individuazione del pacchetto, dal momento che è elencato in 'npm search'.",
	"package.json.description": "Configurazione NPM per questo pacchetto.",
	"package.json.directories.bin": "Se si specifica una directory 'bin', tutti i file in tale cartella verranno usati come hash 'bin'.",
	"package.json.directories.doc": "Inserire qui i file markdown. Verranno forse visualizzati in modo corretto in futuro.",
	"package.json.directories.example": "Inserire qui gli script di esempio. Verranno forse esposti in modo più chiaro in futuro.",
	"package.json.directories.lib": "Indicare agli utenti dove si trova la maggior parte della libreria. La cartella lib non viene usata per operazioni specifiche, ma include meta informazioni utili.",
	"package.json.directories.man": "Una cartella contiene numerose pagine man, che vengono usate per generare una matrice 'man'.",
	"package.json.files": "Il campo 'files' è costituito da una matrice di file da includere nel progetto. Se si assegna un nome a una cartella nella matrice, questa includerà anche i file all'interno della cartella.",
	"package.json.homepage": "URL della home page del progetto.",
	"package.json.keywords": "Questo facilita l'individuazione del pacchetto, dal momento che è elencato in 'npm search'.",
	"package.json.license": "È consigliabile specificare una licenza per il pacchetto in modo da informare gli utenti delle autorizzazioni necessarie per usarlo e delle eventuali restrizioni applicate.",
	"package.json.licenses": "È consigliabile specificare una licenza per il pacchetto in modo da informare gli utenti delle autorizzazioni necessarie per usarlo e delle eventuali restrizioni applicate.",
	"package.json.main": "Il campo principale è un ID modulo che costituisce il punto di ingresso principale del programma.",
	"package.json.maintainers": "Elenco degli utenti che gestiscono questo pacchetto.",
	"package.json.man": "Consente di specificare un singolo file o una matrice di nomi file che il programma man è in grado di trovare.",
	"package.json.name": "Nome del pacchetto.",
	"package.json.person": "Utente che è stato coinvolto nella creazione o nella gestione di questo pacchetto",
	"package.json.preferGlobal": "Se il pacchetto è principalmente un'applicazione da riga di comando che deve essere installata globalmente, impostare questo valore su true per fornire un avviso nel caso in cui venga installato in locale.",
	"package.json.private": "Se è impostato su true, npm non consentirà di pubblicarlo.",
	"package.json.repository": "Consente di specificare la posizione del codice. Questa informazione è utile per gli utenti che vogliono collaborare.",
	"package.json.scripts": "Il membro 'scripts' è un hash oggetto di comandi script eseguiti in diversi momenti del ciclo di vita del pacchetto. La chiave corrisponde all'evento del ciclo di vita, mentre il valore al comando da eseguire in tale momento.",
	"package.json.underscore": "Qualsiasi proprietà che inizia con _ è valida.",
	"package.json.version": "La versione deve essere analizzabile con node-semver, incluso con npm sotto forma di dipendenza.",
	"project.json.authors": "Autore dell'applicazione",
	"project.json.bundleExclude": "Elenco di file da escludere dall'output della pubblicazione (kpm bundle).",
	"project.json.code": "Criterio GLOB per specificare tutti i file di codice che devono essere compilati. Tipo di dati: stringa o matrice con criteri GLOB. Esempio: [ 'Cartella1*.cs', 'Cartella2*.cs' ]",
	"project.json.commands": "Comandi disponibili per questa applicazione",
	"project.json.compilationOptions": "Opzioni di compilazione passate a Roslyn",
	"project.json.configurations": "Le configurazioni sono gruppi denominati di impostazioni di compilazione. Nel runtime sono integrate due configurazioni predefinite, 'Debug' e 'Release'.",
	"project.json.dependencies": "Dipendenze dell'applicazione. Ogni voce specifica il nome e la versione di un pacchetto Nuget.",
	"project.json.dependency.name": "Versione della dipendenza.",
	"project.json.dependency.type": "Tipo della dipendenza. Le dipendenze di tipo 'build' esistono solo in fase di compilazione.",
	"project.json.description": "Descrizione dell'applicazione",
	"project.json.exclude": "Criterio GLOB per indicare tutti i file di codice da escludere dalla compilazione. Tipo di dati: stringa o matrice con criteri GLOB.",
	"project.json.frameworks": "Framework di destinazione che verranno compilati e dipendenze specifiche della configurazione.",
	"project.json.preprocess": "Criterio GLOB per indicare tutti i file di codice da pre-elaborare. Tipo di dati: stringa con criterio GLOB.",
	"project.json.resources": "Criterio GLOB per indicare tutti i file da compilare come risorse.",
	"project.json.script": "Uno o più script della riga di comando.\r\rVariabili disponibili:\r%project:Directory% - Directory del progetto\r%project:Name% - Nome del progetto\r%project:Version% - Versione del progetto",
	"project.json.scripts": "Script da eseguire nelle varie fasi.",
	"project.json.shared": "Criterio GLOB per specificare i file di codice da condividere con progetti dipendenti. Esempio: [ 'Cartella1*.cs', 'Cartella2*.cs' ]",
	"project.json.title": "Schema JSON per file project.json di ASP.NET",
	"project.json.version": "Versione dell'applicazione, ad esempio 1.2.0.0",
	"project.json.webroot": "La proprietà webroot specificata nel file project.json indica la radice del server Web, ovvero la cartella pubblica. In Visual Studio questa cartella verrà usata per definire la radice di IIS. I file statici devono essere inseriti in questo punto.",
	"schema.json": "Descrive un file JSON che utilizza uno schema. Per ulteriori informazioni, vedere json-schema.org.",
	"schema.json.$schema": "Schema da usare per la verifica di questo documento ",
	"schema.json.additionalItems": "Per matrici, solo quando gli elementi sono impostati come una matrice. Se è uno schema, convalida gli elementi dopo quelli specificati dalla matrice di elementi. Se è false, gli elementi aggiuntivi impediranno la convalida.",
	"schema.json.additionalProperties": "Uno schema o un valore booleano. Se è uno schema, viene usato per convalidare tutte le proprietà che non corrispondono a 'properties' o 'patternProperties'. Se è false, eventuali proprietà non corrispondenti a nessuna delle due bloccheranno lo schema.",
	"schema.json.allOf": "Una matrice di schemi, i quali devono tutti avere una corrispondenza.",
	"schema.json.anyOf": "Una matrice di schemi, dove almeno uno deve avere una corrispondenza.",
	"schema.json.default": "Un valore predefinito. Utilizzato dai suggerimenti.",
	"schema.json.definitions": "Non utilizzato per la convalida. Posizionare qui i sottoschemi ai quali si desidera fare riferimento inline con $ref",
	"schema.json.dependencies": "Mapping di nomi di proprietà a una matrice di nomi di proprietà o a uno schema. Una matrice di nomi di proprietà indica che, per essere valida, la proprietà denominata nella chiave dipende dalle proprietà nella matrice presente nell'oggetto. Se il valore è uno schema, lo schema viene applicato solo all'oggetto se la proprietà nella chiave esiste nell'oggetto.",
	"schema.json.description": "Una lunga descrizione dell'elemento. Utilizzata nei menu visualizzati al passaggio del mouse e nei suggerimenti.",
	"schema.json.enum": "Il set di valori letterali validi",
	"schema.json.exclusiveMaximum": "Rende esclusiva la proprietà maximum.",
	"schema.json.exclusiveMininum": "Rende esclusiva la proprietà minimum.",
	"schema.json.id": "Identificatore univoco per lo schema.",
	"schema.json.items": "Per le matrici. Può essere uno schema in base al quale convalidare tutti gli elementi o una matrice di schemi in base alla quale convalidare ogni elemento nell'ordine appropriato (il primo schema convalida il primo elemento, il secondo schema convalida il secondo elemento e così via).",
	"schema.json.maxItems": "Il numero massimo di elementi che possono essere presenti in una matrice. Inclusivo.",
	"schema.json.maxLength": "La lunghezza massima di una stringa.",
	"schema.json.maxProperties": "Il numero massimo di proprietà che un oggetto può avere. Inclusivo.",
	"schema.json.maximum": "Il valore numerico massimo, inclusivo per impostazione predefinita.",
	"schema.json.minItems": "Il numero minimo di elementi che possono essere presenti in una matrice. Inclusivo.",
	"schema.json.minLength": "La lunghezza minima di una stringa.",
	"schema.json.minProperties": "Il numero minimo di proprietà che un oggetto può avere. Inclusivo.",
	"schema.json.minimum": "Il valore numerico minimo, inclusivo per impostazione predefinita.",
	"schema.json.multipleOf": "Un numero per il quale il valore corrente deve essere diviso perfettamente (ossia senza resto)",
	"schema.json.not": "Uno schema che non deve avere corrispondenze.",
	"schema.json.oneOf": "Una matrice di schemi, uno dei quali deve avere una corrispondenza.",
	"schema.json.pattern": "Un'espressione regolare alla quale far corrispondere la stringa. Non implicitamente ancorata.",
	"schema.json.patternProperties": "Mapping di espressioni regolari su nomi di proprietà a schemi per le proprietà corrispondenti.",
	"schema.json.properties": "Mapping di nomi di proprietà a schemi per ogni proprietà.",
	"schema.json.required": "Matrice di stringhe che elenca i nomi di tutte le proprietà richieste per questo oggetto.",
	"schema.json.title": "Titolo descrittivo dell'elemento",
	"schema.json.type": "Una stringa di uno dei tipi di schema di base (numero, intero, null, matrice, oggetto, booleano, stringa) o una matrice di stringhe che specifica un subset di questi tipi.",
	"schema.json.uniqueItems": "Se tutti gli elementi nella matrice devono essere univoci. Il valore predefinito è false.",
	"snippetSchema.json": "Configurazione del frammento utente",
	"snippetSchema.json.body": "Contenuto del frammento. Usare '${id}', '${id:label}', '${1:label}' per le variabili e '$0', '$1' per le posizioni del cursore",
	"snippetSchema.json.description": "Descrizione del frammento.",
	"snippetSchema.json.prefix": "Prefisso da usare quando si seleziona il frammento in IntelliSense",
	"tsconfig.json.compilerOptions": "Indica al compilatore TypeScript come compilare i file con estensione ts",
	"tsconfig.json.compilerOptions.charset": "Set di caratteri dei file di input",
	"tsconfig.json.compilerOptions.declaration": "Genera i file d.ts corrispondenti.",
	"tsconfig.json.compilerOptions.diagnostics": "Mostra le informazioni diagnostiche.",
	"tsconfig.json.compilerOptions.emitBOM": "Crea un BOM (Byte Order Mark) UTF-8 all'inizio dei file di output.",
	"tsconfig.json.compilerOptions.inlineSourceMap": "Crea un unico file con le mappe di origine invece di file separati.",
	"tsconfig.json.compilerOptions.inlineSources": "Crea l'origine unitamente alle mappe di origine all'interno di un unico file. Richiede l'impostazione di --inlineSourceMap.",
	"tsconfig.json.compilerOptions.listFiles": "Stampa i nomi dei file che fanno parte della compilazione.",
	"tsconfig.json.compilerOptions.locale": "Impostazioni locali da usare per la visualizzazione dei messaggi di errore, ad esempio it-it.",
	"tsconfig.json.compilerOptions.mapRoot": "Consente di specificare il percorso in cui il debugger deve trovare i file map invece dei percorsi generati",
	"tsconfig.json.compilerOptions.module": "Consente di specificare il tipo di generazione del codice del modulo, ovvero 'CommonJS', 'Amd', 'System' o 'UMD'.",
	"tsconfig.json.compilerOptions.newLine": "Consente di specificare la sequenza di fine riga da usare per la creazione dei file, ovvero 'CRLF' (in DOS) o 'LF' (in UNIX).",
	"tsconfig.json.compilerOptions.noEmit": "Non crea l'output.",
	"tsconfig.json.compilerOptions.noEmitHelpers": "Non genera funzioni di supporto personalizzate, come __extends, nell'output compilato.",
	"tsconfig.json.compilerOptions.noEmitOnError": "Non visualizza l'output se sono stati restituiti errori di controllo del tipo.",
	"tsconfig.json.compilerOptions.noImplicitAny": "Avvisa in caso di espressioni e dichiarazioni con il tipo 'any' implicito.",
	"tsconfig.json.compilerOptions.noLib": "Non include il file di libreria predefinito (lib.d.ts).",
	"tsconfig.json.compilerOptions.out": "Concatena e crea l'output in un singolo file.",
	"tsconfig.json.compilerOptions.outDir": "Reindirizza la struttura di output alla directory.",
	"tsconfig.json.compilerOptions.preserveConstEnums": "Non cancella le dichiarazioni enum const nel codice generato.",
	"tsconfig.json.compilerOptions.removeComments": "Non crea commenti nell'output.",
	"tsconfig.json.compilerOptions.rootDir": "Consente di specificare la directory radice dei file di input. Usare per controllare la struttura della directory di output con --outDir.",
	"tsconfig.json.compilerOptions.sourceMap": "Genera il file '.map' corrispondente.",
	"tsconfig.json.compilerOptions.sourceRoot": "Consente di specificare il percorso in cui il debugger deve trovare i file TypeScript invece dei percorsi di origine.",
	"tsconfig.json.compilerOptions.suppressImplicitAnyIndexErrors": "Non visualizza gli errori noImplicitAny per gli oggetti di indicizzazione in cui mancano le firme dell'indice.",
	"tsconfig.json.compilerOptions.target": "Consente di specificare la versione di destinazione di ECMAScript: 'ES3' (predefinita), 'ES5' o 'ES6' (sperimentale).",
	"tsconfig.json.files": "Se in un file tsconfig.json non è presente alcuna proprietà 'files', per impostazione predefinita il compilatore include tutti i file contenuti nella directory e nelle sottodirectory. Se la proprietà 'files' è specificata, vengono inclusi solo tali file.",
	"tsconfig.json.title": "Schema JSON per il file di configurazione del compilatore TypeScript"
}